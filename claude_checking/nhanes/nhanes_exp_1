import pandas as pd
import os

def load_nhanes():
    df = pd.read_csv("data/nhanes_dfg2_labels.csv")

    df = df[["ingred_desc", "simple_name", "label"]]
    df.columns = ["input_desc", "target_desc", "label"]

    # turning the food descriptions in each column to lowercase
    columns_to_lower = ["input_desc", "target_desc"]
    df[columns_to_lower] = df[columns_to_lower].apply(lambda x: x.str.lower())

    df = df.drop_duplicates(subset="input_desc", keep="first")

    return df

if __name__ == "__main__":
    nhanes_df = load_nhanes()
    nhanes_df = nhanes_df[nhanes_df["label"] == 1]

    df = pd.read_csv("claude_checking/nhanes/data/food_matches.txt", sep="\t", header=None)
    df.columns = ["input_desc", "predicted_desc"]
    df = df.drop_duplicates(subset="input_desc", keep="first")

    df["input_desc"] = df["input_desc"].str.lower()
    df["predicted_desc"] = df["predicted_desc"].str.lower()

    # Merge with ground truth
    merged = df.merge(nhanes_df, on="input_desc", how="left")


    # Compare predictions to true targets
    merged["correct"] = merged["predicted_desc"] == merged["target_desc"]

    # Compute stats
    # accuracy = matched["correct"].mean()
    # num_incorrect = (~matched["correct"]).sum()
    # we actually want accuracy in the case of - penalizing for missing AND incorrect predictions
    accuracy = merged["correct"].sum() / len(nhanes_df)

    # Summary
    print(f"Total (actual) inputs: {len(df)}")
    print(f"Total (predicted) inputs: {len(df)}")
    # print(f"Incorrect predictions: {num_incorrect}")
    print(f"Accuracy: {accuracy:.2%}")

    accuracy_str = f"accuracy: {accuracy:.2%}"

    os.makedirs("claude_checking/nhanes/results", exist_ok=True)
    with open("claude_checking/nhanes/results/accuracy.txt", "w") as f:
        f.write(accuracy_str)

    merged.to_csv("claude_checking/nhanes/results/results_nhanes_claude.csv", index=False)
